With Robot Priorities:
    Tune new actuator code
    Tune stdDevs on vision
    Make autos accurate
    Perfect auto intake
    Perfect auto amp

Implementation Priorities:
    Implement final controls 
    Implement stage shot
    implement variable vision stdDevs
    Clean up code in general
    add setPose to end of amp and stage shot maybe
    add velocity PID / feedforward to shooter for better consistency
    add gravity compensation on shooting
    ball out and add full motion shots

FINAL CONTROLS:
    Right Trigger: Intake
    Left Trigger: Aim Close
    Right Bumper: Auto Intake
    Left Bumper: Auto Shoot
    A Button: Auto Amp
    X Button: Aim Stage
    Y Button: Aim Ferry
    DPad Up: Climbers Up
    Dpad Down: Climbers Down
    Dpad Left: Zero Gyro
    Dpad Right: Zero Actuator

Other TODO: 
Add auto intake using google coral
Tune the vision stdDevs so that it is very accurate:
    Trust less during auto and more during teleop maybe
Make sure that everything works from both blue side and red side
Tune swerve rotation PID so that it turns quickly
Add gravity compensation to the getPitch method in PoseEstimatorSub
Tune autos, ensure Choreo constants are accurate
Tune amp scoring:
    Add stop so that pose estimation is accurate, also tune stdDevs on vision
    Potentially make less reliant on pose estimation and more reliant on a limelight crosshair
Add setPose to end of amp scoring
CRAZY: Add full motion shooting:
    make code that tests angles to .1 degree until it finds the most accurate one

"Done:" 
Tune Actuator to be accurate to 1 degree and be quick:
    try squaring the gravity feedforward, so its stronger at the bottom and weaker at the top
    try SYSID type stuff and find a curve of best fit

Add velocity PID to shooter
Add correct code for gravity compensation on shooting
Add code to change the vision StdDevs when shooting/auto
FINALLY look as SYSID and custom feedforward for the actuator so it is good